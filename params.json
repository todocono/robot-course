{
  "name": "Robot course",
  "tagline": "Based on Arduino",
  "body": "### Intro\r\nThis is a short course about robotics, designed to have in about 10 sessions an outcome of team members building robots and experimenting with different setups.\r\n\r\nIt has been used both in at least four countries in several iterations. It is, of course, far from perfect. But it is something, at least, that tries to give a comprehensive view to beginners about what robots really are and how to create them.\r\n\r\nPlease help to improve it and it's code by placing an issue on the master branch. You are also welcome to ask for a Pull Request @todocono.\r\n\r\n\r\n### Content\r\n1. Team Building - Activity\r\n2. Robotics - Intro\r\n3. Mechanics Fundamentals\r\n4. Electronics Fundamentals\r\n5. Maze Solving - Activity\r\n6. Software Fundamentals\r\n7. Sensors\r\n8. Telecommunication\r\n9. Analog signals\r\n10. Chain Reaction - Activity\r\n\r\n### 0. Instructions for the instructions\r\nThis set of instructions go hand in hand with the set of code examples hosted at http://github.com/todocono/robot-course.\r\n\r\nThe mechanical kit can be purchased at http://multiplo.org and the electronics are based on Arduino UNO & L298N.\r\n\r\nIt is a good strategy to establish rules about how to use the materials at the beginning. For example, the instructor will only have one rule to ask for the attention of the students. Stating a clear set of expectations always help to focus the group.\r\n\r\n### 1. Team Building - Activity\r\n\r\nAny activity would do it. Here is a suggestion of one that it is my favorite.\r\n\r\n  1. Receive instructions.\r\n\r\n  2. Team up, groups of at least 3 people.\r\n\r\n  3. Gather the materials. (marshmallow, 20 spaghetti, 1m of tape, 1m of thread)\r\n\r\n  4. Build for 18 minutes. The tallest tower that stands for 1 minute wins.\r\n\r\n  5. Watch the video https://www.youtube.com/watch?v=1p5sBzMtB3Q\r\n\r\n  6. Answer:\r\n    -  how many people did he test?\r\n    -  where did he tested it?\r\n    -  where were the best engineers?\r\n    -  who had the worst performance?\r\n    -  how do kindergarten kids perform?\r\n    -  where do these answers leave us a team?\r\n\r\nNotes:\r\n- There is a complementary video with graphs of why is this happening.\r\n\r\n- Detailed instructions are hosted [here] (http://marshmallowchallenge.com/instructions). You will need them if you are an instructor and this is the first time you run it.\r\n\r\n### 2. Robotics - Intro\r\n\r\nRead the related material. Use online resources to answer:\r\n-  what does \"Robot\" mean?\r\n-  what were the first robots?\r\n-  where were the best engineers?\r\n-  who had the worst performance?\r\n-  how do kindergarten kids perform?\r\n-  where do these answers leave us a team?\r\n\r\n2. Robotics - Intro\r\n3. Mechanics Fundamentas\r\n* 4. Electronics Fundamentals\r\n* 5. Maze Solving - Activity\r\n* 6. Software Fundamentals\r\n* 7. Sensors\r\n* 8. Telecommunication\r\n* 9. Analog signals\r\n* 10. Chain Reaction - Activity\r\n\r\n\r\n### Authors and Contributors\r\nYou can find Rudi both on twitter and Github as @todocono . Back in 2012, Julian da Silva @miniBloq served as an inspiration for this course. Feel free to open an issue or start a wiki for it and to shoot for a Pull Request if you want to improve the code or the content.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}